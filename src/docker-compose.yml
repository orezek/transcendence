services:
  auth-service:
    depends_on:
      auth-db-service:
          condition: service_healthy
    build:
      context: ./auth_service/app
      dockerfile: ./docker/Dockerfile
    container_name: auth_service
    environment:
      - PROFILE=${PROFILE:-default}  # Default to 'default' profile if PROFILES is not set
    ports:
      - "1234:1234"
    volumes:
      - ./auth_service:/usr/src/auth_service
    networks:
      - transcendence

  proxy-service:
    build:
      context: ./proxy_service
      dockerfile: ./Dockerfile
    container_name: proxy_service
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./proxy_service/static:/var/www/proxy_service/static
      - ../frontend:/var/www/proxy_service/frontend
    networks:
      - transcendence
    restart: always

  auth-db-service:
    build:
      context: ./auth_service/db/docker
      dockerfile: Dockerfile
    container_name: auth-db_service
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: securepassword
      POSTGRES_DB: auth_db
    volumes:
      - auth_db_data:/var/lib/postgresql/data # named volume
    networks:
      - transcendence
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U auth_user -d auth_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  swagger-ui:
    image: swaggerapi/swagger-ui:3.18.2
    environment:
      - SWAGGER_JSON=/openapi.yml
      - BASE_URL=/api-docs
    volumes:
      - ./auth_service/openapi.yml:/openapi.yml
    depends_on:
      - auth-service
    networks:
      - transcendence

networks:
  transcendence:
    driver: bridge
# named volumes == best practice
volumes:
  auth_db_data: